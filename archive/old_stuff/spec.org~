RIVEREND 
/bespoke animation suite in Common LISP/

Oooh what a fancy name.

* Origins

* New surface types
- Unbounded plane :: silly idea, without a bound, and givin the present world-geometry, it covers the entire screen in a single color. (not even with shading, as of now)
** TODO Create an intuitive image of an unbounded plane
- Point :: too damn small to see or care about. 
High likelihood of being invisible to the rays generated by the camera. Should be implemented on the camera plane, but also, there should be some machinery that keeps the render engine from omiting geometry which isn't continuous in the space of its projections. (I'd like to say this in a sort of topological way, but words are failing me. I think it'd be really cool to have a web series that describes the details of how this engine works. It seemes like it would be very easy to visualize-- and probably a good excercise in visualization techniques. On the way, I'd discover so many useful ways of animating things. Of course, I'm still pretty damn far from being able to visualize even my present engine.
- Polygons :: Seriously, how the hell do you do that?
The best intuition I have is that a very long, almost graph-theoretic specification must be given, from which a pretty benal algorithm will take each of the sides, and a given ray (the intesection function, with first hit). 
To do that, 
it will scan through each of the faces of the polygon 
     (maybe filtered by some distance function taylored to that situation 
      as a function of the ray number) 
                        
                         
